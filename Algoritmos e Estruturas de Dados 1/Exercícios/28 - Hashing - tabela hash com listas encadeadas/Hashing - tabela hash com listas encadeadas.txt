Implemente um TAD para hashing estático aberto, onde as colisões devem ser resolvidas por meio de listas encadeadas ordenadas. A função hash deve ser resto de divisão, ou seja, h(k) = k % B, onde k é uma chave e B é o tamanho da tabela hash.

Input Format

Na primeira linha deve ser lido o tamanho da tabela hash. Na segunda linha deve ser lida a quantidade de chaves que serão alocadas. Por fim, devem ser lidas as chaves que serão alocadas na tabela hash.

Constraints

.

Output Format

Imprimir as posições onde as chaves foram colocadas na tabela. Em seguida, imprimir a tabela hash inteira. Para isso, deve ser considerado o seguinte formato: "linha_i: -> item_0 -> item_1 -> ... -> item_n"

Caso a i-ésima linha da matriz esparsa seja nula, basta imprimir "linha_i -> ".

Sample Input 0

10
10
1
2
5
10
13
20
11
18
12
22
Sample Output 0

1
2
5
0
3
0
1
8
2
2

0: -> 10 -> 20
1: -> 1 -> 11
2: -> 2 -> 12 -> 22
3: -> 13
4: -> 
5: -> 5
6: -> 
7: -> 
8: -> 18
9: -> 